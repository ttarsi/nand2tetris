// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);
    RAM8(in=in, load=load1, address=address[0..2], out=a);
    RAM8(in=in, load=load2, address=address[0..2], out=b);
    RAM8(in=in, load=load3, address=address[0..2], out=c);
    RAM8(in=in, load=load4, address=address[0..2], out=d);
    RAM8(in=in, load=load5, address=address[0..2], out=e);
    RAM8(in=in, load=load6, address=address[0..2], out=f);
    RAM8(in=in, load=load7, address=address[0..2], out=g);
    RAM8(in=in, load=load8, address=address[0..2], out=h);
    Mux8Way16(a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h, sel=address[3..5], out=out);
}
